
OffsetClause	    	OFFSET{INTEGER}
LimitClause	    	LIMIT{INTEGER}






SourceSelector	    	{IRIref}
DefaultGraphClause	    	{SourceSelector}
NamedGraphClause	    	NAMED{SourceSelector}
DatasetClause	    	FROM({DefaultGraphClause}|{NamedGraphClause})

GraphNode	    	{VarOrTerm}|{TriplesNode}
Collection	    	\({GraphNode}+\)
PropertyListNotEmpty	    	{Verb}{ObjectList}(\;({Verb}{ObjectList})?)*
BlankNodePropertyList	    	\[{PropertyListNotEmpty}\]
TriplesNode	    	{Collection}|{BlankNodePropertyList}
Object	    	{GraphNode}
ObjectList	    	{Object}(\,{Object})*				  
PropertyList	    	{PropertyListNotEmpty}?
TriplesSameSubject	    	{VarOrTerm}{PropertyListNotEmpty}|{TriplesNode}{PropertyList}
TriplesBlock	    	{TriplesSameSubject}(\.{TriplesBlock}?)?

OrderCondition	    	((ASC|DESC){BrackettedExpression})|(Constraint|Var)
OrderClause	    	ORDERBY{OrderCondition}+
LimitOffsetClauses	    	({LimitClause}{OffsetClause}?|{OffsetClause}{LimitClause}?)
SolutionModifier	    	{OrderClause}?{LimitOffsetClauses}?


OptionalGraphPattern	    	OPTIONAL{GroupGraphPattern}
GraphGraphPattern	    	GRAPH{VarOrIRIref}{GroupGraphPattern}
GroupOrUnionGraphPattern	    	{GroupGraphPattern}(UNION{GroupGraphPattern})*

ConstructTemplate	    	\{{ConstructTriples}?\}
ConstructTriples	    	{TriplesSameSubject}(\.{ConstructTriples}?)?

IRIrefOrFunction	    	{IRIref}{ArgList}?

BrackettedExpression	    	\({Expression}\)
PrimaryExpression	    	{BrackettedExpression}|{BuiltInCall}|{IRIrefOrFunction}|{RDFLiteral}|{NumericLiteral}|{BooleanLiteral}|{Var}
UnaryExpression	    	\!{PrimaryExpression}|\+{PrimaryExpression}|\-{PrimaryExpression}|{PrimaryExpression}
MultiplicativeExpression	    	{UnaryExpression}(\*{UnaryExpression}|\/{UnaryExpression})*
AdditiveExpression	    	{MultiplicativeExpression}(\+{MultiplicativeExpression}|\-{MultiplicativeExpression}|{NumericLiteralPositive}|{NumericLiteralNegative})*
NumericExpression	    	{AdditiveExpression}
RelationalExpression	    	{NumericExpression}(\={NumericExpression}|\!\={NumericExpression}|\<{NumericExpression}|\>{NumericExpression}|\<\={NumericExpression}|\>\={NumericExpression})?
ValueLogical	    	{RelationalExpression}
ConditionalAndExpression	    	{ValueLogical}(\&\&{ValueLogical})*
ConditionalOrExpression	    	{ConditionalAndExpression}(\|\|{ConditionalAndExpression})*
Expression	    	{ConditionalOrExpression}			  
RegexExpression	    	REGEX\({Expression}\,{Expression}(\,{Expression})?\)
BuiltInCall	    	  STR\({Expression}\)|LANG\({Expression}\)|LANGMATCHES\({Expression}\,{Expression}\)|DATATYPE\({Expression}\)|BOUND\({Var}\)|sameTerm\({Expression}\,{Expression}\)|isIRI\({Expression}\)|isURI\({Expression}\)|isBLANK\({Expression}\)|isLITERAL\({Expression}\)|{RegexExpression}

ArgList	    	(NIL|\({Expression}(\,{Expression})*\))
FunctionCall	    	{IRIref}{ArgList}
Constraint	    	{BrackettedExpression}|{BuiltInCall}|{FunctionCall}
Filter	    	FILTER{Constraint}
GraphPatternNotTriples	    	{OptionalGraphPattern}|{GroupOrUnionGraphPattern}|{GraphGraphPattern}
GroupGraphPattern	    	\{{TriplesBlock}?(({GraphPatternNotTriples}|{Filter})\.?{TriplesBlock}?)*\}
WhereClause	    	WHERE?{GroupGraphPattern}


Prologue	    	{BaseDecl}?{PrefixDecl}*
SelectQuery	    	SELECT(DISTINCT|REDUCED)?({Var}+|\*){DatasetClause}*{WhereClause}{SolutionModifier}
ConstructQuery	    	CONSTRUCT{ConstructTemplate}{DatasetClause}*{WhereClause}{SolutionModifier}
DescribeQuery	    	DESCRIBE({VarOrIRIref}+|*){DatasetClause}*{WhereClause}?{SolutionModifier}
AskQuery	    	ASK{DatasetClause}*{WhereClause}
Query	    	{Prologue}({SelectQuery}|{ConstructQuery}|{DescribeQuery}|{AskQuery})
													
													
													
BaseDecl	    	BASE{IRI_REF}
PrefixDecl	    	PREFIX{PNAME_NS}{IRI_REF}	
PrefixedName	    	{PNAME_LN}|{PNAME_NS}
IRIref	    	{IRI_REF}|{PrefixedName}
BlankNode	    	{BLANK_NODE_LABEL}|{ANON}
String	    	{STRING_LITERAL1}|{STRING_LITERAL2}|{STRING_LITERAL_LONG1}|{STRING_LITERAL_LONG2}
RDFLiteral	    	{String}({LANGTAG}|(\^\^{IRIref}))?
NumericLiteralUnsigned	    	{INTEGER}|{DECIMAL}|{DOUBLE}
NumericLiteralPositive	    	{INTEGER_POSITIVE}|{DECIMAL_POSITIVE}|{DOUBLE_POSITIVE}
NumericLiteralNegative	    	{INTEGER_NEGATIVE}|{DECIMAL_NEGATIVE}|{DOUBLE_NEGATIVE}
BooleanLiteral	    	true|false
NumericLiteral	    	{NumericLiteralUnsigned}|{NumericLiteralPositive}|{NumericLiteralNegative}
GraphTerm	    	{IRIref}|{RDFLiteral}|{NumericLiteral}|{BooleanLiteral}|{BlankNode}|{NIL}
VarOrTerm	    	{Var}|{GraphTerm}
VarOrIRIref	    	{Var}|{IRIref}
Verb	    	{VarOrIRIref}|a										